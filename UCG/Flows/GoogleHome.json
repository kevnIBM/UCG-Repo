[
    {
        "id": "53e2434d.b0246c",
        "type": "subflow",
        "name": "GetNodeRedSession",
        "info": "",
        "in": [
            {
                "x": 65.5,
                "y": 62,
                "wires": [
                    {
                        "id": "5371d272.db7d44"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 365.5,
                "y": 62,
                "wires": [
                    {
                        "id": "5371d272.db7d44",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "5371d272.db7d44",
        "type": "function",
        "z": "53e2434d.b0246c",
        "name": "Get Session",
        "func": "msg.session = global.get(\"session_\" + msg.user); \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 215.5,
        "y": 62,
        "wires": [
            []
        ]
    },
    {
        "id": "6834abbd.59cdd4",
        "type": "subflow",
        "name": "GetCloudantSession",
        "info": "",
        "in": [
            {
                "x": 41,
                "y": 45,
                "wires": [
                    {
                        "id": "c8d70706.42bc7"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 734,
                "y": 45,
                "wires": [
                    {
                        "id": "efcdc7b4.58a2f",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "20c055a1.043382",
        "type": "comment",
        "z": "6834abbd.59cdd4",
        "name": "Must have cloudant Index on convoUser and convoTS ",
        "info": "",
        "x": 329.48028564453125,
        "y": 99.02044677734375,
        "wires": []
    },
    {
        "id": "c8d70706.42bc7",
        "type": "function",
        "z": "6834abbd.59cdd4",
        "name": "Get Session",
        "func": "msg.savePayload = msg.payload\n\nmsg.headers = {\"Content-type\" : \"application/json\"}\nmsg.url = \"https://bdea5362-c793-408b-9b0a-698c42002903-bluemix.cloudant.com/session/_find\"\n\n//testing new users\n//msg.user = \"dennisnoto@gmail.com\"\n\nmsg.payload = {selector: {\n     convoUser: {$eq: msg.user}     },\n     sort: [{convoUser:\"desc\"},{convoTS: \"desc\"}],    \n     limit: 5\n}\n\n\n\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 161,
        "y": 46,
        "wires": [
            [
                "a8e3a5b3.4f9638"
            ]
        ]
    },
    {
        "id": "efcdc7b4.58a2f",
        "type": "function",
        "z": "6834abbd.59cdd4",
        "name": "Set Session",
        "func": "//sesion object from Cloudant DB\n\nif (typeof msg.payload.docs !== \"undefined\")\n  {msg.session = msg.payload.docs[0]}\nelse \n  { msg.session = {};\n      \n}\n   \n//reset payload from channel to continue flow\nmsg.payload = msg.savePayload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 584,
        "y": 45,
        "wires": [
            []
        ]
    },
    {
        "id": "a8e3a5b3.4f9638",
        "type": "http request",
        "z": "6834abbd.59cdd4",
        "name": "Cloudant-HTTPS",
        "method": "POST",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 392,
        "y": 46,
        "wires": [
            [
                "efcdc7b4.58a2f"
            ]
        ]
    },
    {
        "id": "a4bbd9f9.0f30b",
        "type": "subflow",
        "name": "GetRedisSession",
        "info": "",
        "in": [
            {
                "x": 33.48760986328125,
                "y": 71.6234130859375,
                "wires": [
                    {
                        "id": "78f736b9.b2d0c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 790.480224609375,
                "y": 71.38070678710938,
                "wires": [
                    {
                        "id": "2bd47cff.4edf8c",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "78f736b9.b2d0c",
        "type": "function",
        "z": "a4bbd9f9.0f30b",
        "name": "Get Session",
        "func": "msg.savePayload = msg.payload\n\nmsg.payload = [msg.user]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 183.48760986328125,
        "y": 71.6234130859375,
        "wires": [
            [
                "6720536.dc2a22c"
            ]
        ]
    },
    {
        "id": "6720536.dc2a22c",
        "type": "redis-command",
        "z": "a4bbd9f9.0f30b",
        "server": "8d255ef1.21185",
        "command": "get",
        "name": "",
        "topic": "",
        "x": 350.49127197265625,
        "y": 71.60504150390625,
        "wires": [
            [
                "771cd95e.1ddae8"
            ]
        ]
    },
    {
        "id": "2bd47cff.4edf8c",
        "type": "function",
        "z": "a4bbd9f9.0f30b",
        "name": "Set Session",
        "func": "if (typeof msg.payload.convoUser !== \"undefined\" )\n  {msg.session = msg.payload}\nelse \n  { \n      \n}\n   \n//reset payload from channel to continue flow\nmsg.payload = msg.savePayload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640.480224609375,
        "y": 71.38070678710938,
        "wires": [
            []
        ]
    },
    {
        "id": "771cd95e.1ddae8",
        "type": "json",
        "z": "a4bbd9f9.0f30b",
        "name": "",
        "x": 490.4765930175781,
        "y": 71.85501098632812,
        "wires": [
            [
                "2bd47cff.4edf8c"
            ]
        ]
    },
    {
        "id": "8d255ef1.21185",
        "type": "redis-config",
        "z": "",
        "host": "bluemix-sandbox-dal-9-portal.7.dblayer.com",
        "port": "27247",
        "dbase": "0",
        "pass": "IVKPWZBPOAJYQCRR"
    },
    {
        "id": "5fa9e96c.b0465",
        "type": "subflow",
        "name": "Get Session",
        "info": "",
        "in": [
            {
                "x": 53.983917236328125,
                "y": 43.61785888671875,
                "wires": [
                    {
                        "id": "7c4400c3.ddc1a8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 393.9839172363281,
                "y": 43.61785888671875,
                "wires": [
                    {
                        "id": "7c4400c3.ddc1a8",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "7c4400c3.ddc1a8",
        "type": "subflow:a4bbd9f9.0f30b",
        "z": "5fa9e96c.b0465",
        "name": "",
        "x": 223.98391723632812,
        "y": 43.61785888671875,
        "wires": [
            []
        ]
    },
    {
        "id": "2b03a660.633b82",
        "type": "subflow:6834abbd.59cdd4",
        "z": "5fa9e96c.b0465",
        "x": 230.5,
        "y": 114.01022338867188,
        "wires": [
            []
        ]
    },
    {
        "id": "8b74a1b9.e443a8",
        "type": "subflow:53e2434d.b0246c",
        "z": "5fa9e96c.b0465",
        "name": "",
        "x": 226.5,
        "y": 185,
        "wires": [
            []
        ]
    },
    {
        "id": "aeabbb9b.db72b8",
        "type": "comment",
        "z": "5fa9e96c.b0465",
        "name": "Wire up at least one of the Session functions",
        "info": "Choose \n   GetNodeRedSession for prototyping\n   \nEnterprise use\nChoose \n   GetCloudantSeesion for DB Session\nor\n   GetRedisSession for Memory Cache\n   \nPlease note that you will need to wire up the\ncorresponding Set Session subflow",
        "x": 227.5,
        "y": 249,
        "wires": []
    },
    {
        "id": "5f8257f4.6085d8",
        "type": "subflow",
        "name": "SetNodeRedSession",
        "info": "",
        "in": [
            {
                "x": 53.5,
                "y": 55,
                "wires": [
                    {
                        "id": "79956486.46ed6c"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "79956486.46ed6c",
        "type": "function",
        "z": "5f8257f4.6085d8",
        "name": "Set Session",
        "func": "global.set(\"session_\" + msg.payload.convoUser, msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 179.5,
        "y": 54,
        "wires": [
            []
        ]
    },
    {
        "id": "18b15d09.ae994b",
        "type": "subflow",
        "name": "SetCloundantSession",
        "info": "",
        "in": [
            {
                "x": 35,
                "y": 46,
                "wires": [
                    {
                        "id": "25e9f410.0b2604"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "25e9f410.0b2604",
        "type": "http request",
        "z": "18b15d09.ae994b",
        "name": "Cloudant-HTTPS",
        "method": "POST",
        "ret": "txt",
        "url": "https://6edb4533-845a-480b-ba6e-efbc3e50ceef-bluemix.cloudant.com/session",
        "tls": "",
        "x": 205,
        "y": 46,
        "wires": [
            []
        ]
    },
    {
        "id": "ddc92215.86cb8",
        "type": "subflow",
        "name": "SetRedisSession",
        "info": "",
        "in": [
            {
                "x": 25,
                "y": 55.38446044921875,
                "wires": [
                    {
                        "id": "2476bdb.32d8742"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "2476bdb.32d8742",
        "type": "function",
        "z": "ddc92215.86cb8",
        "name": "Set Session-Cache",
        "func": "\nmsg.payload = [msg.payload.convoUser, JSON.stringify(msg.payload)]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 195,
        "y": 55.38446044921875,
        "wires": [
            [
                "5547fc95.c9c514"
            ]
        ]
    },
    {
        "id": "5547fc95.c9c514",
        "type": "redis-command",
        "z": "ddc92215.86cb8",
        "server": "8d255ef1.21185",
        "command": "set",
        "name": "",
        "topic": "",
        "x": 380.00006103515625,
        "y": 54.957977294921875,
        "wires": [
            []
        ]
    },
    {
        "id": "8d255ef1.21185",
        "type": "redis-config",
        "z": "",
        "host": "bluemix-sandbox-dal-9-portal.7.dblayer.com",
        "port": "27247",
        "dbase": "0",
        "pass": "IVKPWZBPOAJYQCRR"
    },
    {
        "id": "8c0b0e67.7c9d5",
        "type": "subflow",
        "name": "Set Session",
        "info": "",
        "in": [
            {
                "x": 64.9444580078125,
                "y": 40.222259521484375,
                "wires": [
                    {
                        "id": "5f62b842.05ff38"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 384.9444580078125,
                "y": 40.222259521484375,
                "wires": [
                    {
                        "id": "5f62b842.05ff38",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "5f62b842.05ff38",
        "type": "function",
        "z": "8c0b0e67.7c9d5",
        "name": "Define Session",
        "func": "//New Database Seesion Mgt\n// convoUser - Unique user id across channels\n// ConvoTS - Timestamp of actual WCS Call\n// convoSource - Source Channel Name, will be used in Convo\n//             - Examples (Alexa,Google Home, Slack, Phone, WebChat, Mobile)\n//convoPayload - actual return from WCS\n// Database document will be calles session\n// -- Index on convoUser and convoTS\n// -- We will write all WCS turns into the table\n// -- On retrieval  of the user session\n//    -- We will search by index put back last 5 documents sorted by convoTS descending\n//    -- assures first document will be the latest WCS user convo\n\n\nvar sessionMsg = {\n    payload : {\n    convoUser : msg.user,\n    convoTS : Date(),\n    convoSource : msg.source,\n    convoPayload : msg.payload\n    }\n}\n\nreturn [msg,sessionMsg];",
        "outputs": "2",
        "noerr": 0,
        "x": 224.9444580078125,
        "y": 40.222259521484375,
        "wires": [
            [],
            [
                "69867456.a631e4"
            ]
        ]
    },
    {
        "id": "69867456.a631e4",
        "type": "subflow:ddc92215.86cb8",
        "z": "8c0b0e67.7c9d5",
        "x": 441.9765625,
        "y": 101.17121887207031,
        "wires": []
    },
    {
        "id": "7d26924c.353e0c",
        "type": "subflow:18b15d09.ae994b",
        "z": "8c0b0e67.7c9d5",
        "name": "SetCloudantSession",
        "x": 456,
        "y": 156,
        "wires": []
    },
    {
        "id": "c150a291.2b6358",
        "type": "subflow:5f8257f4.6085d8",
        "z": "8c0b0e67.7c9d5",
        "x": 456.5,
        "y": 214,
        "wires": []
    },
    {
        "id": "464d68f2.66b8c8",
        "type": "comment",
        "z": "8c0b0e67.7c9d5",
        "name": "Wire up a Session storage subflow",
        "info": "For prototyping use SetNodeRedSession\n\nFor Enterprise use either Redis or Cloudant\n\nNote you will need a Redis/Cloudant service if\npick one of the Enterprise methods.",
        "x": 164.5,
        "y": 148,
        "wires": []
    },
    {
        "id": "3b9327d.1cf0658",
        "type": "http in",
        "z": "3038ee23.28f912",
        "name": "GoogleHome",
        "url": "/GoogleHome",
        "method": "post",
        "swaggerDoc": "",
        "x": 83,
        "y": 206,
        "wires": [
            [
                "56b76ae3.496914",
                "c5cf1e3b.b9f0d8"
            ]
        ]
    },
    {
        "id": "56b76ae3.496914",
        "type": "debug",
        "z": "3038ee23.28f912",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 177,
        "y": 98,
        "wires": []
    },
    {
        "id": "972863cb.09c2d",
        "type": "watson-conversation-v1",
        "z": "3038ee23.28f912",
        "name": "Conversation",
        "workspaceid": "080cccd4-9146-4f2d-ac20-d232f9af8789",
        "multiuser": true,
        "context": true,
        "x": 1099,
        "y": 251,
        "wires": [
            [
                "205e5774.532d48",
                "bd02c884.6f5e3"
            ]
        ]
    },
    {
        "id": "8d9ae499.7d8078",
        "type": "function",
        "z": "3038ee23.28f912",
        "name": "Response Msg",
        "func": "/* Example Payload for Google\n{\n  \"speech\": \"...\",  // ASCII characters only\n  \"displayText\": \"...\",\n  \"data\": {\n    \"google\": {\n      \"expect_user_response\": true,\n      \"is_ssml\": true,\n      \"permissions_request\": {\n        \"opt_context\": \"...\",\n        \"permissions\": [\n          \"NAME\",\n          \"DEVICE_COARSE_LOCATION\",\n          \"DEVICE_PRECISE_LOCATION\"\n        ]\n      }\n    }\n  },\n  \"contextOut\": [...],\n}*/\n\nmsg.headers = {\"Content-type\" : \"application/json\"}\nvar input = msg.payload.input.text\nvar texts = msg.payload.output.text\n\nvar myEndSession = true;    \n\ntotalText = \"\"\nfor (i = 0; i < texts.length; i++) {\n    \n    if (texts[i].lastIndexOf(\"[\") >= 0 ) {\n       findindex = texts[i].lastIndexOf(\"[\");\n       texts[i] = texts[i].substring(0,findindex);\n    } \n  totalText = totalText + \" \" + texts[i]\n}\n\nif (msg.tellGoogleNoWorries) \n{totalText = \"Okay, you're information is safe with me.\" + totalText\n  msg.tellGoogleNoWorries = false  \n}\n\n\nif (input.toUpperCase().substring(0,5) == \"LATER\" ||\n    totalText.lastIndexOf(\"wonderful day\") >= 0 ||\n    totalText.lastIndexOf(\"great day\") >= 0\n)\n   {myEndSession = false}\n\n\n\nmyResponse = {\n    \"speech\": totalText,  // ASCII characters only\n    \"displayText\": \"\",\n    \"data\": {\n      \"google\": {\n        \"expect_user_response\": myEndSession,\n        \"is_ssml\": false\n        }\n     }\n}\n\nmsg.payload = myResponse \nnode.send(msg);\n    \n\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1480,
        "y": 249,
        "wires": [
            [
                "cc111a47.c3fda",
                "7dc01b9e.7ceb24"
            ]
        ]
    },
    {
        "id": "cc111a47.c3fda",
        "type": "http response",
        "z": "3038ee23.28f912",
        "name": "",
        "x": 1626,
        "y": 131,
        "wires": []
    },
    {
        "id": "f2522686.3b6f98",
        "type": "debug",
        "z": "3038ee23.28f912",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 344,
        "y": 108,
        "wires": []
    },
    {
        "id": "205e5774.532d48",
        "type": "debug",
        "z": "3038ee23.28f912",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1254,
        "y": 166,
        "wires": []
    },
    {
        "id": "f1bc39c2.7ee81",
        "type": "function",
        "z": "3038ee23.28f912",
        "name": "Set Params",
        "func": "var workspace_id = msg.req.query.workspace_id;\nvar fname = msg.req.query.fname;\n\nvar context = {}\n\nif (typeof msg.session !== \"undefined\") \n   {context = msg.session.convoPayload.context}\n\ncontext.flowName = \"GoogleHome\"\n\n\nvar params = {\n    context : context,\n    workspace_id : workspace_id\n};\n\nvar additional_context = {};\nvar googleIntent = \"\"\nvar googleIName = \"\"\nvar googleContext = \"\"\nif (typeof msg.payload.originalRequest.data.user.profile !== \"undefined\"){\n     additional_context.fname = msg.payload.originalRequest.data.user.profile.given_name   \n    }\n\nif (typeof msg.payload.originalRequest.data.inputs !== \"undefined\"){\n     googleIntent = msg.payload.originalRequest.data.inputs[0].intent\n    }\n\nif (typeof msg.payload.originalRequest.data.inputs[0].arguments[0] !== \"undefined\"){\n     \n     if (typeof msg.payload.originalRequest.data.inputs[0].arguments[0].name !== \"undefined\"){\n       googleIName =  msg.payload.originalRequest.data.inputs[0].arguments[0].name \n     }\n    }\n\nif (typeof msg.payload.result.contexts[0] !== \"undefined\") {\n    \n     if (msg.payload.result.contexts[0].name.lastIndexOf(\"actions\") >= 0) {\n        \n        if (typeof msg.payload.result.contexts[1] !== \"undefined\"){\n           googleContext = msg.payload.result.contexts[1].name \n        }\n     }\n     else {\n        googleContext = msg.payload.result.contexts[0].name \n     }\n}\n\nmsg.payload = msg.payload.result.resolvedQuery\nmsg.params = params\nmsg.googleIntent = googleIntent\nmsg.googleIName = googleIName\nmsg.googleContext = googleContext\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 298,
        "y": 207,
        "wires": [
            [
                "f2522686.3b6f98",
                "492c2d6c.ccc75c"
            ]
        ]
    },
    {
        "id": "7dc01b9e.7ceb24",
        "type": "debug",
        "z": "3038ee23.28f912",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1572,
        "y": 371,
        "wires": []
    },
    {
        "id": "492c2d6c.ccc75c",
        "type": "switch",
        "z": "3038ee23.28f912",
        "name": "Intents",
        "property": "googleIntent",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "assistant.intent.action.PERMISSION",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "assistant.intent.action.MAIN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "claim-status",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "claim-process",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "deductibles",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 6,
        "x": 454.5,
        "y": 209,
        "wires": [
            [
                "33bc0cd.a1e0174",
                "efd5d3d3.0c2768"
            ],
            [
                "12437e6.1736602"
            ],
            [
                "1b5026bd.d8c611"
            ],
            [
                "1b5026bd.d8c611"
            ],
            [
                "1b5026bd.d8c611"
            ],
            [
                "fcd323a3.930598"
            ]
        ]
    },
    {
        "id": "12437e6.1736602",
        "type": "function",
        "z": "3038ee23.28f912",
        "name": "Ask Permission",
        "func": "\nmsg.headers = {\"Content-type\" : \"application/json\"}\n\nmyResponse = {\n    \"speech\": \"Send Permission Request\",  // ASCII characters only\n    \"displayText\": \"\",\n    \"data\": {\n      \"google\": {\n        \"expect_user_response\": false,\n        \"is_ssml\": false,\n        \"permissions_request\": {\n        \"opt_context\": \"Before we get started.\",\n        \"permissions\": [\"NAME\", \"DEVICE_COARSE_LOCATION\", \"DEVICE_PRECISE_LOCATION\"]\n         }\n        }\n     }\n}\n\nmsg.payload = myResponse \nnode.send(msg);\n\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 765.5,
        "y": 126,
        "wires": [
            [
                "cc111a47.c3fda",
                "9375db30.91e068"
            ]
        ]
    },
    {
        "id": "33bc0cd.a1e0174",
        "type": "function",
        "z": "3038ee23.28f912",
        "name": "Handle Permission",
        "func": "if (msg.payload.toUpperCase().lastIndexOf(\"NO\") >= 0 \n)\n   {msg.tellGoogleNoWorries = true}\nelse\n   {msg.tellGoogleNoWorries = false}\n   \nif (msg.googleContext.lastIndexOf(\"claim-status\") >= 0 ) {\n    msg.payload = \"get a status of my claim\"\n}\n\nelse if (msg.googleContext.lastIndexOf(\"claim-process\") >= 0 ) {\n    msg.payload = \"how do claims work\"\n}\nelse if (msg.googleContext.lastIndexOf(\"claim-deductible\") >= 0 ) {\n    msg.payload = \"what are my deductibles and limits\"\n}\n\n\nelse {\n    msg.payload =  \"Hello\"\n}    \n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 775.5,
        "y": 63,
        "wires": [
            [
                "fcd323a3.930598"
            ]
        ]
    },
    {
        "id": "9375db30.91e068",
        "type": "debug",
        "z": "3038ee23.28f912",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1027.5,
        "y": 55,
        "wires": []
    },
    {
        "id": "1b5026bd.d8c611",
        "type": "switch",
        "z": "3038ee23.28f912",
        "name": "trigger?",
        "property": "googleIName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "trigger_query",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 667.5,
        "y": 214,
        "wires": [
            [
                "12437e6.1736602"
            ],
            [
                "fcd323a3.930598"
            ]
        ]
    },
    {
        "id": "efd5d3d3.0c2768",
        "type": "debug",
        "z": "3038ee23.28f912",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 511.5,
        "y": 53,
        "wires": []
    },
    {
        "id": "bd02c884.6f5e3",
        "type": "subflow:8c0b0e67.7c9d5",
        "z": "3038ee23.28f912",
        "x": 1294.5,
        "y": 250,
        "wires": [
            [
                "8d9ae499.7d8078"
            ]
        ]
    },
    {
        "id": "c5cf1e3b.b9f0d8",
        "type": "function",
        "z": "3038ee23.28f912",
        "name": "Get User",
        "func": "msg.user = msg.payload.sessionId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 122.5,
        "y": 346,
        "wires": [
            [
                "ed6fa46d.f35f88"
            ]
        ]
    },
    {
        "id": "ed6fa46d.f35f88",
        "type": "subflow:5fa9e96c.b0465",
        "z": "3038ee23.28f912",
        "x": 278.5,
        "y": 346,
        "wires": [
            [
                "f1bc39c2.7ee81"
            ]
        ]
    },
    {
        "id": "fcd323a3.930598",
        "type": "watson-tone-analyzer-v3",
        "z": "3038ee23.28f912",
        "name": "tone",
        "tones": "all",
        "sentences": "true",
        "contentType": "false",
        "tone-method": "generalTone",
        "x": 832.5,
        "y": 316,
        "wires": [
            [
                "25d7c592.c70e3a"
            ]
        ]
    },
    {
        "id": "25d7c592.c70e3a",
        "type": "function",
        "z": "3038ee23.28f912",
        "name": "Add Tone",
        "func": "node.log(\"*********Found Tone ********\" + msg.response.document_tone.tone_categories[0].tones[0].tone_id);\nnode.log(\"*********Found Tone **Score*****\" + msg.response.document_tone.tone_categories[0].tones[0].score.toFixed(3));\n\nmsg.params.context.angerName = msg.response.document_tone.tone_categories[0].tones[0].tone_name;\nmsg.params.context.angerScore = msg.response.document_tone.tone_categories[0].tones[0].score.toFixed(3);\nmsg.params.context.disgustName = msg.response.document_tone.tone_categories[0].tones[1].tone_name;\nmsg.params.context.disgustScore = msg.response.document_tone.tone_categories[0].tones[1].score.toFixed(3);\nmsg.params.context.fearName = msg.response.document_tone.tone_categories[0].tones[2].tone_name;\nmsg.params.context.fearScore = msg.response.document_tone.tone_categories[0].tones[2].score.toFixed(3);\nmsg.params.context.joyName = msg.response.document_tone.tone_categories[0].tones[3].tone_name;\nmsg.params.context.joyScore = msg.response.document_tone.tone_categories[0].tones[3].score.toFixed(3);\nmsg.params.context.sadnessName = msg.response.document_tone.tone_categories[0].tones[4].tone_name;\nmsg.params.context.sadnessScore = msg.response.document_tone.tone_categories[0].tones[4].score.toFixed(3);\n\nmsg.params.context.analyticalName = msg.response.document_tone.tone_categories[1].tones[0].tone_name;\nmsg.params.context.analyticalScore = msg.response.document_tone.tone_categories[1].tones[0].score.toFixed(3);\nmsg.params.context.confidentName = msg.response.document_tone.tone_categories[1].tones[1].tone_name;\nmsg.params.context.confidentScore = msg.response.document_tone.tone_categories[1].tones[1].score.toFixed(3);\nmsg.params.context.tentativeName = msg.response.document_tone.tone_categories[1].tones[2].tone_name;\nmsg.params.context.tentativeScore = msg.response.document_tone.tone_categories[1].tones[2].score.toFixed(3);\n\nmsg.params.context.OpenName = msg.response.document_tone.tone_categories[2].tones[0].tone_name;\nmsg.params.context.OpenScore = msg.response.document_tone.tone_categories[2].tones[0].score.toFixed(3);\nmsg.params.context.conTitle = msg.response.document_tone.tone_categories[2].tones[1].tone_name;\nmsg.params.context.conScore = msg.response.document_tone.tone_categories[2].tones[1].score.toFixed(3);\nmsg.params.context.extName = msg.response.document_tone.tone_categories[2].tones[2].tone_name;\nmsg.params.context.extScore = msg.response.document_tone.tone_categories[2].tones[2].score.toFixed(3);\nmsg.params.context.agreeName = msg.response.document_tone.tone_categories[2].tones[3].tone_name;\nmsg.params.context.agreeScore = msg.response.document_tone.tone_categories[2].tones[3].score.toFixed(3);\nmsg.params.context.emoName = msg.response.document_tone.tone_categories[2].tones[4].tone_name;\nmsg.params.context.emoScore = msg.response.document_tone.tone_categories[2].tones[4].score.toFixed(3);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 969.5,
        "y": 316,
        "wires": [
            [
                "972863cb.09c2d"
            ]
        ]
    }
]