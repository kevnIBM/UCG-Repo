[
    {
        "id": "baca1edc.cd63f",
        "type": "http in",
        "z": "87b325d8.5b54b8",
        "name": "Load HTTP in",
        "url": "/load",
        "method": "post",
        "swaggerDoc": "",
        "x": 260.95220947265625,
        "y": 183.0196075439453,
        "wires": [
            [
                "11cc063.5a8ccfa"
            ]
        ]
    },
    {
        "id": "cf1c740e.bb091",
        "type": "function",
        "z": "87b325d8.5b54b8",
        "name": "Set Params",
        "func": "\nvar user_name = msg.req.query.user_name;\n//var user_id = msg.payload.user_id;\nvar workspace_id = msg.req.query.workspace_id;\nvar fname = msg.req.query.fname;\n\n//create a null context and test for session existance\nvar context = {}\n\nif (typeof msg.session !== \"undefined\") \n   {context = msg.session.convoPayload.context}\n   \nvar newmsg = msg.req.query.text;\nmsg.payload = newmsg;\n\ncontext.fname = fname\n\nvar params = {\n    context: context,\n    workspace_id : workspace_id\n   \n};\n\n node.log(\"User *** \" + msg.user + \" Said *** \" + newmsg)\n\nreturn {\n    payload: newmsg,\n    user : msg.user,\n  //  additional_context : additional_context,\n    params : params,\n    req : msg.req,\n    res : msg.res\n    \n};",
        "outputs": 1,
        "noerr": 0,
        "x": 645.8966674804688,
        "y": 179.2418670654297,
        "wires": [
            [
                "85e5a121.c06838"
            ]
        ]
    },
    {
        "id": "85e5a121.c06838",
        "type": "watson-conversation-v1",
        "z": "87b325d8.5b54b8",
        "name": "",
        "workspaceid": "56cfca8a-b459-447f-ab35-e94511f6f7bc",
        "multiuser": true,
        "context": false,
        "x": 886.3411254882812,
        "y": 177.65850067138672,
        "wires": [
            [
                "ebfdd0bf.c4de6"
            ]
        ]
    },
    {
        "id": "e20479ff.2e4e6",
        "type": "function",
        "z": "87b325d8.5b54b8",
        "name": "Respone Msg",
        "func": "var Watson_msg = msg.payload;\nvar Watson_response = JSON.stringify(msg.payload.output.text);\n\nMyresponse = Watson_response.substring(2,Watson_response.length-2);\n\n//var texts = Myresponse.split(\"\\\",\\\"\");\nvar texts = msg.payload.output.text\nfor (i = 0; i < texts.length; i++) {\n   Myresponse = texts[i];\n  \n\n// causing issues for multiple output responses\n//if (Myresponse.match(\"\\\",\\\"\")) {\n  if (Myresponse.substring(0,Myresponse,2) == \"\\\",\\\"\") {\n     Myresponse = Myresponse.substring(3,Myresponse.length)\n\n}\n\n \nif (Myresponse.lastIndexOf(\"[\") >= 0 ) {\n     findindex = Myresponse.lastIndexOf(\"[\")\n     Myresponse = Myresponse.substring(0,findindex)\n\n} \nif (Myresponse.lastIndexOf(\"InsMap\") >= 0 ) {\n     findindex = Myresponse.lastIndexOf(\"InsMap\")\n     Myresponse = Myresponse.substring(0,findindex)\n    \n     \n} \n\n// Dennis added because SSML tag was escaping the \" with \\\" and the replace command fixes it!!!!\nMyresponse = Myresponse.replace(/\\\\/g, \"\");\n//Dennis - Remove XML SSML tags from chat systems\nMyresponse = Myresponse.replace(/<[^>]+>/g, \"\");\n\n node.log(\"User *** \" + msg.user +\" Response *** \" + Myresponse)\n\nmsg.payload = Myresponse;\n\nnode.send(msg);\n}\nreturn null;\n",
        "outputs": "1",
        "noerr": 0,
        "x": 1332.0078201293945,
        "y": 171.35293579101562,
        "wires": [
            [
                "152a3557.8e8443"
            ]
        ]
    },
    {
        "id": "ebfdd0bf.c4de6",
        "type": "function",
        "z": "87b325d8.5b54b8",
        "name": "Set Session",
        "func": "//New Database Seesion Mgt\n// convoUser - Unique user id across channels\n// ConvoTS - Timestamp of actual WCS Call\n// convoSource - Source Channel Name, will be used in Convo\n//             - Examples (Alexa,Google Home, Slack, Phone, WebChat, Mobile)\n//convoPayload - actual return from WCS\n// Database document will be calles session\n// -- Index on convoUser and convoTS\n// -- We will write all WCS turns into the table\n// -- On retrieval  of the user session\n//    -- We will search by index put back last 5 documents sorted by convoTS descending\n//    -- assures first document will be the latest WCS user convo\n\n\nvar sessionMsg = {\n    payload : {\n    convoUser : msg.user,\n    convoTS : Date(),\n    convoSource : \"Slack\",\n    convoPayload : msg.payload\n    }\n}\n\nreturn [msg,sessionMsg];",
        "outputs": "2",
        "noerr": 0,
        "x": 1128.8966369628906,
        "y": 177.2418670654297,
        "wires": [
            [
                "e20479ff.2e4e6"
            ],
            [
                "2dd5d3d1.28861c"
            ]
        ]
    },
    {
        "id": "9df7918.2c05c7",
        "type": "function",
        "z": "87b325d8.5b54b8",
        "name": "Get Session-Cache",
        "func": "msg.savePayload = msg.payload\n\nmsg.headers = {\"Content-type\" : \"application/json\"}\nmsg.url = \"https://bdea5362-c793-408b-9b0a-698c42002903-bluemix.cloudant.com/session/_find\"\n\n//testing new users\n//msg.user = \"dennisnoto@gmail.com\"\n\nmsg.payload = {selector: {\n     convoUser: {$eq: msg.user}     },\n     sort: [{convoUser:\"desc\"},{convoTS: \"desc\"}],    \n     limit: 5\n}\n\n\n\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 376.89666748046875,
        "y": 550.2418899536133,
        "wires": [
            [
                "587dc7c8.84aeb8"
            ]
        ]
    },
    {
        "id": "f4ca5497.e85528",
        "type": "function",
        "z": "87b325d8.5b54b8",
        "name": "Set Session",
        "func": "//sesion object from Cloudant DB\n\nif (typeof msg.payload.docs !== \"undefined\")\n  {msg.session = msg.payload.docs[0]}\nelse \n  { msg.session = {};\n      \n}\n   \n//reset payload from channel to continue flow\nmsg.payload = msg.savePayload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 779.8966674804688,
        "y": 549.2418899536133,
        "wires": [
            []
        ]
    },
    {
        "id": "11cc063.5a8ccfa",
        "type": "function",
        "z": "87b325d8.5b54b8",
        "name": "Get User",
        "func": "\nmsg.user =  msg.req.query.user_id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 429.8966369628906,
        "y": 180.2418670654297,
        "wires": [
            [
                "85375e8c.b5c328"
            ]
        ]
    },
    {
        "id": "587dc7c8.84aeb8",
        "type": "http request",
        "z": "87b325d8.5b54b8",
        "name": "Cloudant-HTTPS",
        "method": "POST",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 587.8966674804688,
        "y": 550.2418899536133,
        "wires": [
            [
                "f4ca5497.e85528"
            ]
        ]
    },
    {
        "id": "152a3557.8e8443",
        "type": "http response",
        "z": "87b325d8.5b54b8",
        "name": "Http Response",
        "x": 1543.4522094726562,
        "y": 174.24187469482422,
        "wires": []
    },
    {
        "id": "85375e8c.b5c328",
        "type": "function",
        "z": "87b325d8.5b54b8",
        "name": "Get Session",
        "func": "msg.savePayload = msg.payload\n\nmsg.payload = [msg.user]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 322.4398193359375,
        "y": 332.6430130004883,
        "wires": [
            [
                "27c2ec35.96c254"
            ]
        ]
    },
    {
        "id": "27c2ec35.96c254",
        "type": "redis-command",
        "z": "87b325d8.5b54b8",
        "server": "cce6f4d6.398058",
        "command": "get",
        "name": "",
        "topic": "",
        "x": 489.4434814453125,
        "y": 332.62464141845703,
        "wires": [
            [
                "2458b540.75f1ca"
            ]
        ]
    },
    {
        "id": "586bf5d9.acbad4",
        "type": "function",
        "z": "87b325d8.5b54b8",
        "name": "Set Session",
        "func": "if (typeof msg.payload.convoUser !== \"undefined\" )\n  {msg.session = msg.payload}\nelse \n  { \n      \n}\n   \n//reset payload from channel to continue flow\nmsg.payload = msg.savePayload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 779.4324340820312,
        "y": 332.40030670166016,
        "wires": [
            [
                "cf1c740e.bb091"
            ]
        ]
    },
    {
        "id": "2dd5d3d1.28861c",
        "type": "function",
        "z": "87b325d8.5b54b8",
        "name": "Set Session-Cache",
        "func": "\nmsg.payload = [msg.payload.convoUser, JSON.stringify(msg.payload)]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1114.4287719726562,
        "y": 342.40406036376953,
        "wires": [
            [
                "525e6f4.9ab811"
            ]
        ]
    },
    {
        "id": "525e6f4.9ab811",
        "type": "redis-command",
        "z": "87b325d8.5b54b8",
        "server": "cce6f4d6.398058",
        "command": "set",
        "name": "",
        "topic": "",
        "x": 1299.4288330078125,
        "y": 341.97757720947266,
        "wires": [
            []
        ]
    },
    {
        "id": "b009a236.a2cb88",
        "type": "comment",
        "z": "87b325d8.5b54b8",
        "name": "Old Session mgt Method via Cloudant. Cloudant -> Archive  and Redis -> Session Cache",
        "info": "",
        "x": 575.4324798583984,
        "y": 488.04004669189453,
        "wires": []
    },
    {
        "id": "2458b540.75f1ca",
        "type": "json",
        "z": "87b325d8.5b54b8",
        "name": "",
        "x": 629.4288024902344,
        "y": 332.8746109008789,
        "wires": [
            [
                "586bf5d9.acbad4"
            ]
        ]
    },
    {
        "id": "cce6f4d6.398058",
        "type": "redis-config",
        "z": "",
        "host": "bluemix-sandbox-dal-9-portal.7.dblayer.com",
        "port": "27247",
        "dbase": "0",
        "pass": "IVKPWZBPOAJYQCRR"
    }
]