[
    {
        "id": "7a7df1a.031261",
        "type": "http in",
        "z": "d7860d84.676db",
        "name": "Mobile HTTP in",
        "url": "/smooch",
        "method": "post",
        "swaggerDoc": "",
        "x": 119,
        "y": 409,
        "wires": [
            [
                "e9cdde83.65f67",
                "631dfb30.f6eaf4"
            ]
        ]
    },
    {
        "id": "7cc6e2b5.3eefd4",
        "type": "watson-conversation-v1",
        "z": "d7860d84.676db",
        "name": "Base Conv",
        "workspaceid": "71fb6c7d-730c-45ea-94e5-e7704b0eb4ca",
        "multiuser": true,
        "context": true,
        "x": 773.4445037841797,
        "y": 513.1111025810242,
        "wires": [
            [
                "d6b2e1f4.9ffbb8",
                "bff20bc.f5d5cf8"
            ]
        ]
    },
    {
        "id": "e9cdde83.65f67",
        "type": "function",
        "z": "d7860d84.676db",
        "name": "Set Params",
        "func": "\n//var workspace_id = msg.req.query.workspace_id;\nvar fname = msg.req.query.fname;\n\n//var user = msg.payload.appUser._id;\n//var input = msg.payload.messages[0].text;\n\nif (typeof(msg.actionPayload) !== \"undefined\"){\n   input = msg.actionPayload;  \n   user = msg.user;\n}else {\n   input = msg.payload.messages[0].text; \n   //user = msg.payload.appUser._id;\n   user = msg.payload.appUser.userId;\n}\n\nvar test  = JSON.stringify(msg.payload);\nnode.log(test)\n\n\n//Zero out maps \nvar map = JSON.parse(\"{}\");  \nvar button = JSON.parse(\"{}\");\n\nif ((input.toUpperCase().substring(0,5) == \"HELLO\") && (input.length > 5)){\nswitch(input.toUpperCase()) {\n    case 'HELLO BANK ASSIST':\n        workspace_id = \"e162651d-3bf1-4cdb-9b88-c700511eef66\";\n        app = \"BankAssist\";\n        break;\n    case 'HELLO INSURE ASSIST':\n        workspace_id = \"be10696f-c581-4c7b-a4b7-8cac928c3e56\";\n        app = \"InsureAssist\";\n        break;\n    case 'HELLO INSURE CALL CENTER ASSIST':\n        workspace_id = \"faf6e421-43ae-474a-8f9e-e8e10e71e3df\";\n        app = \"InsureCCAssist\";\n        break;\n    case 'HELLO WEALTH ASSIST':\n        workspace_id = \" 8a43bb91-62b9-4f45-93c9-dee8075a49fa\";\n        app = \"WealthAssist\";\n        break;\n    case 'HELLO METLIFE ASSIST':\n        workspace_id = \"5fd7c1c7-9ea2-4fc8-b6fa-7920e10aad5a\";\n        app = \"MetLifeAssist\";\n        break;\n    case 'HELLO FIDELITY ASSIST':\n        // fidelity space  workspace_id = \"46975d17-120f-4757-8fe8-4a6649b3a257\";\n       // Fidelity space  app = \"FidelityAssist\";\n        workspace_id = \"1555159e-fa59-4d8d-bfba-b10a19144e22\";\n        app = \"WealthAssist\";\n        break;\n     case 'HELLO REGIONS ASSIST':\n        workspace_id = \"321e996d-efee-42a0-8aed-3dc93006a026\";\n        app = \"RegionsAssist\";\n        break;\n    default: \n        workspace_id = \"17df222b-bf8c-41fc-8bec-da21317d993c\";\n        app = \"InsureAssist\";\n }\n  //global.set(\"app\",app);\n //global.set(\"workspace_id\",workspace_id);\n \n global.set(\"app\"+ user,app);\n global.set(\"workspace_id\"+ user,workspace_id);\n \n node.log(\"app name: \" + \"app\" + user + \" app value: \" + app)\n node.log(\"workspace name: \" + \"workspace_id\" + user + \" workspace_id value: \" +  workspace_id)\n}\n\n//msg.app = global.get(\"app\");\n//var workspace_id = global.get(\"workspace_id\");\n\nmsg.app = global.get(\"app\"+ user);\nvar workspace_id = global.get(\"workspace_id\" + user);\n\nvar params = {\n//     context: context,\n     workspace_id : workspace_id\n}\nvar additional_context = {\n    fname: fname,\n    map : map,\n    button: button\n    \n};\n\nif (input.lastIndexOf('/') >= 0 ) {\n     var myindex = input.lastIndexOf('/')\n     node.log(\"index at: \" + myindex)\n     var dateString = input\n     node.log(\"dateString : \" + dateString)\n     \n     var d = new Date(dateString)\n     node.log(\"d : \" + d)\n     var now = new Date()\n     node.log(\"today: \" + now)\n     var years = now.getFullYear() - d.getFullYear()\n     node.log(\"years: \" + years)\n     \n     d.setFullYear(d.getFullYear() + years)\n     var days = (now.getTime() - d.getTime()) / (3600 * 24 * 1000.00)\n     node.log(\"days: \" + days)\n     var age = years + days /365\n    \n     additional_context.age = Math.round(age *100)/100\n     node.log(\"age: \"+ context.age)\n \n     var d = new Date(dateString)\n     var now = new Date()\n     now.setMonth(\"12\")\n     now.setDate(\"31\")\n     var years = now.getFullYear() - d.getFullYear()\n     d.setFullYear(d.getFullYear() + years)\n     var days = (now.getTime() - d.getTime()) / (3600 * 24 * 1000.00)\n     var ageEOY = years + days /365\n     additional_context.ageEOY = Math.round(ageEOY * 100)/100\n     node.log(\"ageEOY: \"+ context.ageEOY)\n     \n     var d = new Date(dateString)\n     var now = new Date()\n     now.setMonth(\"01\")\n     now.setDate(\"01\")\n     var years = now.getFullYear() - d.getFullYear()\n     d.setFullYear(d.getFullYear() + years)\n     var days = (now.getTime() - d.getTime()) / (3600 * 24 * 1000.00)\n     var ageBOY = years + days /365\n     additional_context.ageBOY = Math.round(ageBOY * 100)/100\n     node.log(\"ageBOY: \"+ context.ageBOY)\n}\n\nmsg.payload = input;\nmsg.params = params;\nmsg.user = user;\nmsg.additional_context = additional_context;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 305.6111831665039,
        "y": 358.2222194671631,
        "wires": [
            [
                "9d874b58.fc7778",
                "983336da.33d88",
                "6d3de912.26eef"
            ]
        ]
    },
    {
        "id": "d6b2e1f4.9ffbb8",
        "type": "function",
        "z": "d7860d84.676db",
        "name": "Response Msg",
        "func": "\nmsg.headers = {\n    'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImFwcF81ODc5YWQ3NWQ2Y2MwMjJkMDAzOWQ4MzkifQ.eyJzY29wZSI6ImFwcCJ9.B3vjbL3IP1nZwndfWF9jr8V9XzsGIiRfQ_Hoq5ya9p8'\n     };\n\nvar Watson_msg = JSON.stringify(msg.payload.output.text);\nvar Watson_context = JSON.stringify(msg.payload.context);\nvar Watson_contextOBJ = msg.payload.context;\n\nvar Myresponse = Watson_msg.substring(2,Watson_msg.length-2);\nnode.log(\"****context**** \" + Watson_context);\n\n// Dennis added because SSML tag was escaping the \" with \\\" and the replace command fixes it!!!!\nMyresponse = Myresponse.replace(/\\\\/g, \"\");\n//Dennis - Remove XML SSML tags from chat systems\nMyresponse = Myresponse.replace(/<[^>]+>/g, \"\");\n\nvar Newmsg = \"\";\nvar response = {};\nvar component = \"\";\nnode.log(\"*********** Output is ************\" + Myresponse);\n//Remove old maps\nif (Myresponse.lastIndexOf(\"InsMap\") >= 0 ) {\n     findindex = Myresponse.lastIndexOf(\"InsMap\");\n     Myresponse = Myresponse.substring(0,findindex);\n     node.log(\"Found a old maps at index:\", findindex);\n     node.log(Myresponse);\n}\n//Found an array of outputs\n//var texts = Myresponse.split(\"\\\",\\\"\");\nvar texts = msg.payload.output.text\nfor (i = 0; i < texts.length; i++) {\n     Newmsg = texts[i]; \n     node.log(\"**********  length ******* \" + texts.length);\n     node.log(\"start with \" + Newmsg);\nvar component = \"\";\nvar mapStr = \"\";\nvar actions = {};\nvar actionsArr = [];\nvar actionsRArr = [];\nvar buttonMTArr = [\"Here's your street view map\", \"Here's your satellite view map\"];\n//simple buttons\nif (Newmsg.lastIndexOf(\"[\") >= 0 ) {\n     component = \"button\";\n     findindex = Newmsg.lastIndexOf(\"[\");\n     node.log(\"Found a buttons at index:\", findindex);\n     findLastindex = Newmsg.lastIndexOf(\"]\");\n     tempStr = Newmsg;\n     Newmsg = Newmsg.substring(0,findindex); // Message without buttons\n     var buttonArr = tempStr.substring(findindex+1, findLastindex).split(\",\");\n    \n     for (a = 0; a < buttonArr.length; a++) { \n        actionsArr.push({\"type\": \"reply\",\"text\": buttonArr[a],\"payload\": buttonArr[a]});\n     }\n     actions = {\"actions\" : actionsArr};\n}\n\n//json map\nnode.log(\"context: \" + Watson_context);\n//var mapjsonStr = Watson_context.match(/\\\"map.*Yes\\\"/);\nmapjsonObj = Watson_contextOBJ.map;\nif (typeof mapjsonObj.values != \"undefined\") {\n//node.log(\"mapjson: \" + mapjsonStr);\n//if (mapjsonStr  !== null){\n    component = \"map\";\n    for (var c in mapjsonObj.values) {\n      mapStr = mapjsonObj.values[c] + \"&size=500x300\";\n      node.log(\"Found Json map str: \" + mapStr);\n      actionsArr.push({\"text\": buttonMTArr[c] +\" \",\"type\":\"link\",\"uri\": mapStr});\n //     actions = {\"actions\" : actionsArr };\n    }\n}\n\n//json button - Note for WCS - can't have a mixed array of Link and Reply. Smooch-limitation\n// Can implement postback buttons, but must handle postback api call. Stubbed at the moment.\n//var buttonjsonStr = Watson_context.match(/\\\"button.*Yes\\\"/);\nvar found_link = 0;\n//node.log(\"buttonjson: \" + buttonjsonStr);\nbuttonjsonObj = Watson_contextOBJ.button;\nif (typeof buttonjsonObj.values != \"undefined\") {\n  \n    for (var c in buttonjsonObj.values) {\n      buttonStr = buttonjsonObj.values[c];\n      if (buttonStr.lastIndexOf(\"|\") >= 0 ) {\n        found_link = 1;\n        buttonItems = buttonStr.split(\"|\");\n        button_title = buttonItems[0];\n        button_url = buttonItems[1];\n        \n        actionsArr.push({\"type\": \"link\",\"text\": button_title,\"uri\": button_url}); \n      }\n      else {\n        button_title = buttonStr;  \n        actionsRArr.push({\"type\": \"reply\",\"text\": button_title,\"payload\": button_title}); \n       //actionsArr.push({\"type\": \"postback\",\"text\": button_title,\"payload\": button_title}); \n      }\n    }  \n    if (found_link > 0) {\n       component = \"buttonLink\"; \n    }else {\n      component = \"buttonReply\";   \n    }\n}\n\n//old maps\nif (Newmsg.lastIndexOf(\"InsMap\") >= 0 ) {\n     findindex = Newmsg.lastIndexOf(\"InsMap\");\n     Newmsg = Newmsg.substring(0,findindex);\n     node.log(\"Found a maps at index:\", findindex);\n     node.log(Newmsg);\n} \n\n// Dennis added because SSML tag was escaping the \" with \\\" and the replace command fixes it!!!!\nNewmsg = Newmsg.replace(/\\\\/g, \"\");\n//Dennis - Remove XML SSML tags from chat systems\nNewmsg = Newmsg.replace(/<[^>]+>/g, \"\");\n\nmsg.url = \"https://api.smooch.io/v1/appusers/\" + msg.user + \"/messages\";\n\nswitch(component) {\n    case 'buttonReply':\n     response = {\n        role : \"appMaker\",\n        type : \"text\",\n        text : Newmsg,\n        email: \"dennisnoto@gmail.com\",\n        actions : actionsRArr\n        };\n        break;\n    case 'buttonLink':\n     response = {\n        role : \"appMaker\",\n        type : \"text\",\n        text : Newmsg,\n        email: \"dennisnoto@gmail.com\",\n        actions : actionsArr\n        };\n        break;\n    case 'map':\n    response = {\n        role : \"appMaker\",\n        type : \"image\",\n        text : Newmsg,\n        email: \"dennisnoto@gmail.com\",\n        mediaUrl: mapStr,\n        mediaType: \"image/jpeg\",\n        actions : actionsArr\n        };\n        break;\n    default:\n    response = {\n        role : \"appMaker\",\n        type : \"text\",\n        text : Newmsg,\n        email: \"dennisnoto@gmail.com\",\n        actions : actionsArr};\n}\n\n if (i != texts.length -1) {\n   response.actions = [];  \n }     \n node.log(\"****First Send: ******* \" + JSON.stringify(response));\n  msg.payload = response;\n  node.send(msg);\n  \n if (actionsRArr.length > 0 &&  component == \"buttonLink\"){\n  response = {\n        role : \"appMaker\",\n        type : \"text\",\n        text : \"\",\n        email: \"dennisnoto@gmail.com\",\n        actions : actionsRArr\n      \n  };\n \n  if (i == texts.length -1) {\n    node.log(\"****Second Send: ******* \" + JSON.stringify(response));\n    msg.payload = response;\n    node.send(msg);  \n  }\n }\n}\n\nreturn null;",
        "outputs": "1",
        "noerr": 0,
        "x": 996.2777938842773,
        "y": 420.1111135482788,
        "wires": [
            [
                "93cc8373.078648",
                "38859239.055bc6",
                "2db41348.9680c4"
            ]
        ]
    },
    {
        "id": "93cc8373.078648",
        "type": "debug",
        "z": "d7860d84.676db",
        "name": "Response",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 1219.5001220703125,
        "y": 485.99998474121094,
        "wires": []
    },
    {
        "id": "9d874b58.fc7778",
        "type": "debug",
        "z": "d7860d84.676db",
        "name": "Incoming",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 301.1666259765625,
        "y": 250.77780151367188,
        "wires": []
    },
    {
        "id": "60fd852d.5cecc4",
        "type": "http request",
        "z": "d7860d84.676db",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1252.5,
        "y": 570,
        "wires": [
            [
                "97653ab8.35c818"
            ]
        ]
    },
    {
        "id": "97653ab8.35c818",
        "type": "debug",
        "z": "d7860d84.676db",
        "name": "Call to Smooch",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 1259.5,
        "y": 682,
        "wires": []
    },
    {
        "id": "631dfb30.f6eaf4",
        "type": "http response",
        "z": "d7860d84.676db",
        "name": "",
        "x": 297.5,
        "y": 462,
        "wires": []
    },
    {
        "id": "38859239.055bc6",
        "type": "debug",
        "z": "d7860d84.676db",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "user",
        "x": 1191.5,
        "y": 344,
        "wires": []
    },
    {
        "id": "bff20bc.f5d5cf8",
        "type": "debug",
        "z": "d7860d84.676db",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1006.9167175292969,
        "y": 273.8610944747925,
        "wires": []
    },
    {
        "id": "efb1fd9d.0905f",
        "type": "switch",
        "z": "d7860d84.676db",
        "name": "",
        "property": "app",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "FidelityAssist",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RegionsAssist",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 3,
        "x": 615.4444694519043,
        "y": 435.31074237823486,
        "wires": [
            [
                "cb784f55.3accd8"
            ],
            [
                "38d2cf87.cbe92"
            ],
            [
                "7cc6e2b5.3eefd4"
            ]
        ]
    },
    {
        "id": "cb784f55.3accd8",
        "type": "watson-conversation-v1",
        "z": "d7860d84.676db",
        "name": "Fidelity Conv",
        "workspaceid": "71fb6c7d-730c-45ea-94e5-e7704b0eb4ca",
        "multiuser": true,
        "context": true,
        "x": 778.8888778686523,
        "y": 350.94966316223145,
        "wires": [
            [
                "d6b2e1f4.9ffbb8",
                "bff20bc.f5d5cf8"
            ]
        ]
    },
    {
        "id": "3297617e.27f896",
        "type": "http in",
        "z": "d7860d84.676db",
        "name": "Postbacks",
        "url": "/smooch-postback",
        "method": "post",
        "swaggerDoc": "",
        "x": 121.50003051757812,
        "y": 518.1250228881836,
        "wires": [
            [
                "631dfb30.f6eaf4",
                "4c259f87.a978d8"
            ]
        ]
    },
    {
        "id": "4c259f87.a978d8",
        "type": "function",
        "z": "d7860d84.676db",
        "name": "actionPayload",
        "func": "msg.headers = {\n    'app-token': '7788i215s5s6si7bp23uv33o9'\n     };\n\nmsg.user = msg.payload.appUser.userId;\nmsg.url = \"https://api.smooch.io/v1/appusers/\" + msg.user + \"/messages\";\nmsg.actionPayload = msg.payload.postbacks[0].action.payload;\n\nresponse = {\n        role : \"appUser\",\n        type : \"text\",\n        text : msg.actionPayload\n};\n\nmsg.payload = response;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 175.76921844482422,
        "y": 610.9999961853027,
        "wires": [
            [
                "bed771b3.78fd98"
            ]
        ]
    },
    {
        "id": "bed771b3.78fd98",
        "type": "http request",
        "z": "d7860d84.676db",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 376.53844451904297,
        "y": 609.4615688323975,
        "wires": [
            []
        ]
    },
    {
        "id": "2db41348.9680c4",
        "type": "delay",
        "z": "d7860d84.676db",
        "name": "",
        "pauseType": "rate",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": ".5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1068.5,
        "y": 571,
        "wires": [
            [
                "60fd852d.5cecc4"
            ]
        ]
    },
    {
        "id": "983336da.33d88",
        "type": "watson-tone-analyzer-v3",
        "z": "d7860d84.676db",
        "name": "Tone",
        "tones": "all",
        "sentences": "true",
        "contentType": "false",
        "x": 428.1746349334717,
        "y": 424.3333330154419,
        "wires": [
            [
                "553fb279.bc506c"
            ]
        ]
    },
    {
        "id": "553fb279.bc506c",
        "type": "function",
        "z": "d7860d84.676db",
        "name": "Add Tone",
        "func": "\nnode.log(\"*********Found Tone ********\" + msg.response.document_tone.tone_categories[0].tones[0].tone_id);\nnode.log(\"*********Found Tone **Score*****\" + msg.response.document_tone.tone_categories[0].tones[0].score.toFixed(3));\n\nmsg.additional_context.angerName = msg.response.document_tone.tone_categories[0].tones[0].tone_name;\nmsg.additional_context.angerScore = msg.response.document_tone.tone_categories[0].tones[0].score.toFixed(3);\nmsg.additional_context.disgustName = msg.response.document_tone.tone_categories[0].tones[1].tone_name;\nmsg.additional_context.disgustScore = msg.response.document_tone.tone_categories[0].tones[1].score.toFixed(3);\nmsg.additional_context.fearName = msg.response.document_tone.tone_categories[0].tones[2].tone_name;\nmsg.additional_context.fearScore = msg.response.document_tone.tone_categories[0].tones[2].score.toFixed(3);\nmsg.additional_context.joyName = msg.response.document_tone.tone_categories[0].tones[3].tone_name;\nmsg.additional_context.joyScore = msg.response.document_tone.tone_categories[0].tones[3].score.toFixed(3);\nmsg.additional_context.sadnessName = msg.response.document_tone.tone_categories[0].tones[4].tone_name;\nmsg.additional_context.sadnessScore = msg.response.document_tone.tone_categories[0].tones[4].score.toFixed(3);\n\nmsg.additional_context.analyticalName = msg.response.document_tone.tone_categories[1].tones[0].tone_name;\nmsg.additional_context.analyticalScore = msg.response.document_tone.tone_categories[1].tones[0].score.toFixed(3);\nmsg.additional_context.confidentName = msg.response.document_tone.tone_categories[1].tones[1].tone_name;\nmsg.additional_context.confidentScore = msg.response.document_tone.tone_categories[1].tones[1].score.toFixed(3);\nmsg.additional_context.tentativeName = msg.response.document_tone.tone_categories[1].tones[2].tone_name;\nmsg.additional_context.tentativeScore = msg.response.document_tone.tone_categories[1].tones[2].score.toFixed(3);\n\nmsg.additional_context.OpenName = msg.response.document_tone.tone_categories[2].tones[0].tone_name;\nmsg.additional_context.OpenScore = msg.response.document_tone.tone_categories[2].tones[0].score.toFixed(3);\nmsg.additional_context.conTitle = msg.response.document_tone.tone_categories[2].tones[1].tone_name;\nmsg.additional_context.conScore = msg.response.document_tone.tone_categories[2].tones[1].score.toFixed(3);\nmsg.additional_context.extName = msg.response.document_tone.tone_categories[2].tones[2].tone_name;\nmsg.additional_context.extScore = msg.response.document_tone.tone_categories[2].tones[2].score.toFixed(3);\nmsg.additional_context.agreeName = msg.response.document_tone.tone_categories[2].tones[3].tone_name;\nmsg.additional_context.agreeScore = msg.response.document_tone.tone_categories[2].tones[3].score.toFixed(3);\nmsg.additional_context.emoName = msg.response.document_tone.tone_categories[2].tones[4].tone_name;\nmsg.additional_context.emoScore = msg.response.document_tone.tone_categories[2].tones[4].score.toFixed(3);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 524.8412780761719,
        "y": 340.9999876022339,
        "wires": [
            [
                "efb1fd9d.0905f"
            ]
        ]
    },
    {
        "id": "6d3de912.26eef",
        "type": "debug",
        "z": "d7860d84.676db",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 490.91070556640625,
        "y": 259.5,
        "wires": []
    },
    {
        "id": "38d2cf87.cbe92",
        "type": "watson-conversation-v1",
        "z": "d7860d84.676db",
        "name": "Regions Conv",
        "workspaceid": "",
        "multiuser": true,
        "context": true,
        "x": 778.0357284545898,
        "y": 431.83332920074463,
        "wires": [
            [
                "d6b2e1f4.9ffbb8"
            ]
        ]
    }
]