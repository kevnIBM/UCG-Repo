[
    {
        "id": "5f8257f4.6085d8",
        "type": "subflow",
        "name": "SetNodeRedSession",
        "info": "",
        "in": [
            {
                "x": 53.5,
                "y": 55,
                "wires": [
                    {
                        "id": "79956486.46ed6c"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "79956486.46ed6c",
        "type": "function",
        "z": "5f8257f4.6085d8",
        "name": "Set Session",
        "func": "global.set(\"session_\" + msg.payload.convoUser, msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 179.5,
        "y": 54,
        "wires": [
            []
        ]
    },
    {
        "id": "18b15d09.ae994b",
        "type": "subflow",
        "name": "SetCloundantSession",
        "info": "",
        "in": [
            {
                "x": 35,
                "y": 46,
                "wires": [
                    {
                        "id": "25e9f410.0b2604"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "25e9f410.0b2604",
        "type": "http request",
        "z": "18b15d09.ae994b",
        "name": "Cloudant-HTTPS",
        "method": "POST",
        "ret": "txt",
        "url": "https://6edb4533-845a-480b-ba6e-efbc3e50ceef-bluemix.cloudant.com/session",
        "tls": "",
        "x": 205,
        "y": 46,
        "wires": [
            []
        ]
    },
    {
        "id": "ddc92215.86cb8",
        "type": "subflow",
        "name": "SetRedisSession",
        "info": "",
        "in": [
            {
                "x": 25,
                "y": 55.38446044921875,
                "wires": [
                    {
                        "id": "2476bdb.32d8742"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "2476bdb.32d8742",
        "type": "function",
        "z": "ddc92215.86cb8",
        "name": "Set Session-Cache",
        "func": "\nmsg.payload = [msg.payload.convoUser, JSON.stringify(msg.payload)]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 195,
        "y": 55.38446044921875,
        "wires": [
            [
                "5547fc95.c9c514"
            ]
        ]
    },
    {
        "id": "5547fc95.c9c514",
        "type": "redis-command",
        "z": "ddc92215.86cb8",
        "server": "8d255ef1.21185",
        "command": "set",
        "name": "",
        "topic": "",
        "x": 380.00006103515625,
        "y": 54.957977294921875,
        "wires": [
            []
        ]
    },
    {
        "id": "8d255ef1.21185",
        "type": "redis-config",
        "z": "",
        "host": "bluemix-sandbox-dal-9-portal.7.dblayer.com",
        "port": "27247",
        "dbase": "0",
        "pass": "IVKPWZBPOAJYQCRR"
    },
    {
        "id": "8c0b0e67.7c9d5",
        "type": "subflow",
        "name": "Set Session",
        "info": "",
        "in": [
            {
                "x": 64.9444580078125,
                "y": 40.222259521484375,
                "wires": [
                    {
                        "id": "5f62b842.05ff38"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 384.9444580078125,
                "y": 40.222259521484375,
                "wires": [
                    {
                        "id": "5f62b842.05ff38",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "5f62b842.05ff38",
        "type": "function",
        "z": "8c0b0e67.7c9d5",
        "name": "Define Session",
        "func": "//New Database Seesion Mgt\n// convoUser - Unique user id across channels\n// ConvoTS - Timestamp of actual WCS Call\n// convoSource - Source Channel Name, will be used in Convo\n//             - Examples (Alexa,Google Home, Slack, Phone, WebChat, Mobile)\n//convoPayload - actual return from WCS\n// Database document will be calles session\n// -- Index on convoUser and convoTS\n// -- We will write all WCS turns into the table\n// -- On retrieval  of the user session\n//    -- We will search by index put back last 5 documents sorted by convoTS descending\n//    -- assures first document will be the latest WCS user convo\n\n\nvar sessionMsg = {\n    payload : {\n    convoUser : msg.user,\n    convoTS : Date(),\n    convoSource : msg.source,\n    convoPayload : msg.payload\n    }\n}\n\nreturn [msg,sessionMsg];",
        "outputs": "2",
        "noerr": 0,
        "x": 224.9444580078125,
        "y": 40.222259521484375,
        "wires": [
            [],
            [
                "69867456.a631e4"
            ]
        ]
    },
    {
        "id": "69867456.a631e4",
        "type": "subflow:ddc92215.86cb8",
        "z": "8c0b0e67.7c9d5",
        "x": 441.9765625,
        "y": 101.17121887207031,
        "wires": []
    },
    {
        "id": "7d26924c.353e0c",
        "type": "subflow:18b15d09.ae994b",
        "z": "8c0b0e67.7c9d5",
        "name": "SetCloudantSession",
        "x": 456,
        "y": 156,
        "wires": []
    },
    {
        "id": "c150a291.2b6358",
        "type": "subflow:5f8257f4.6085d8",
        "z": "8c0b0e67.7c9d5",
        "x": 456.5,
        "y": 214,
        "wires": []
    },
    {
        "id": "464d68f2.66b8c8",
        "type": "comment",
        "z": "8c0b0e67.7c9d5",
        "name": "Wire up a Session storage subflow",
        "info": "For prototyping use SetNodeRedSession\n\nFor Enterprise use either Redis or Cloudant\n\nNote you will need a Redis/Cloudant service if\npick one of the Enterprise methods.",
        "x": 164.5,
        "y": 148,
        "wires": []
    },
    {
        "id": "53e2434d.b0246c",
        "type": "subflow",
        "name": "GetNodeRedSession",
        "info": "",
        "in": [
            {
                "x": 65.5,
                "y": 62,
                "wires": [
                    {
                        "id": "5371d272.db7d44"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 365.5,
                "y": 62,
                "wires": [
                    {
                        "id": "5371d272.db7d44",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "5371d272.db7d44",
        "type": "function",
        "z": "53e2434d.b0246c",
        "name": "Get Session",
        "func": "msg.session = global.get(\"session_\" + msg.user); \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 215.5,
        "y": 62,
        "wires": [
            []
        ]
    },
    {
        "id": "6834abbd.59cdd4",
        "type": "subflow",
        "name": "GetCloudantSession",
        "info": "",
        "in": [
            {
                "x": 41,
                "y": 45,
                "wires": [
                    {
                        "id": "c8d70706.42bc7"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 734,
                "y": 45,
                "wires": [
                    {
                        "id": "efcdc7b4.58a2f",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "20c055a1.043382",
        "type": "comment",
        "z": "6834abbd.59cdd4",
        "name": "Must have cloudant Index on convoUser and convoTS ",
        "info": "",
        "x": 329.48028564453125,
        "y": 99.02044677734375,
        "wires": []
    },
    {
        "id": "c8d70706.42bc7",
        "type": "function",
        "z": "6834abbd.59cdd4",
        "name": "Get Session",
        "func": "msg.savePayload = msg.payload\n\nmsg.headers = {\"Content-type\" : \"application/json\"}\nmsg.url = \"https://bdea5362-c793-408b-9b0a-698c42002903-bluemix.cloudant.com/session/_find\"\n\n//testing new users\n//msg.user = \"dennisnoto@gmail.com\"\n\nmsg.payload = {selector: {\n     convoUser: {$eq: msg.user}     },\n     sort: [{convoUser:\"desc\"},{convoTS: \"desc\"}],    \n     limit: 5\n}\n\n\n\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 161,
        "y": 46,
        "wires": [
            [
                "a8e3a5b3.4f9638"
            ]
        ]
    },
    {
        "id": "efcdc7b4.58a2f",
        "type": "function",
        "z": "6834abbd.59cdd4",
        "name": "Set Session",
        "func": "//sesion object from Cloudant DB\n\nif (typeof msg.payload.docs !== \"undefined\")\n  {msg.session = msg.payload.docs[0]}\nelse \n  { msg.session = {};\n      \n}\n   \n//reset payload from channel to continue flow\nmsg.payload = msg.savePayload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 584,
        "y": 45,
        "wires": [
            []
        ]
    },
    {
        "id": "a8e3a5b3.4f9638",
        "type": "http request",
        "z": "6834abbd.59cdd4",
        "name": "Cloudant-HTTPS",
        "method": "POST",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 392,
        "y": 46,
        "wires": [
            [
                "efcdc7b4.58a2f"
            ]
        ]
    },
    {
        "id": "a4bbd9f9.0f30b",
        "type": "subflow",
        "name": "GetRedisSession",
        "info": "",
        "in": [
            {
                "x": 33.48760986328125,
                "y": 71.6234130859375,
                "wires": [
                    {
                        "id": "78f736b9.b2d0c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 790.480224609375,
                "y": 71.38070678710938,
                "wires": [
                    {
                        "id": "2bd47cff.4edf8c",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "78f736b9.b2d0c",
        "type": "function",
        "z": "a4bbd9f9.0f30b",
        "name": "Get Session",
        "func": "msg.savePayload = msg.payload\n\nmsg.payload = [msg.user]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 183.48760986328125,
        "y": 71.6234130859375,
        "wires": [
            [
                "6720536.dc2a22c"
            ]
        ]
    },
    {
        "id": "6720536.dc2a22c",
        "type": "redis-command",
        "z": "a4bbd9f9.0f30b",
        "server": "8d255ef1.21185",
        "command": "get",
        "name": "",
        "topic": "",
        "x": 350.49127197265625,
        "y": 71.60504150390625,
        "wires": [
            [
                "771cd95e.1ddae8"
            ]
        ]
    },
    {
        "id": "2bd47cff.4edf8c",
        "type": "function",
        "z": "a4bbd9f9.0f30b",
        "name": "Set Session",
        "func": "if (typeof msg.payload.convoUser !== \"undefined\" )\n  {msg.session = msg.payload}\nelse \n  { \n      \n}\n   \n//reset payload from channel to continue flow\nmsg.payload = msg.savePayload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640.480224609375,
        "y": 71.38070678710938,
        "wires": [
            []
        ]
    },
    {
        "id": "771cd95e.1ddae8",
        "type": "json",
        "z": "a4bbd9f9.0f30b",
        "name": "",
        "x": 490.4765930175781,
        "y": 71.85501098632812,
        "wires": [
            [
                "2bd47cff.4edf8c"
            ]
        ]
    },
    {
        "id": "8d255ef1.21185",
        "type": "redis-config",
        "z": "",
        "host": "bluemix-sandbox-dal-9-portal.7.dblayer.com",
        "port": "27247",
        "dbase": "0",
        "pass": "IVKPWZBPOAJYQCRR"
    },
    {
        "id": "5fa9e96c.b0465",
        "type": "subflow",
        "name": "Get Session",
        "info": "",
        "in": [
            {
                "x": 53.983917236328125,
                "y": 43.61785888671875,
                "wires": [
                    {
                        "id": "7c4400c3.ddc1a8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 393.9839172363281,
                "y": 43.61785888671875,
                "wires": [
                    {
                        "id": "7c4400c3.ddc1a8",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "7c4400c3.ddc1a8",
        "type": "subflow:a4bbd9f9.0f30b",
        "z": "5fa9e96c.b0465",
        "name": "",
        "x": 223.98391723632812,
        "y": 43.61785888671875,
        "wires": [
            []
        ]
    },
    {
        "id": "2b03a660.633b82",
        "type": "subflow:6834abbd.59cdd4",
        "z": "5fa9e96c.b0465",
        "x": 230.5,
        "y": 114.01022338867188,
        "wires": [
            []
        ]
    },
    {
        "id": "8b74a1b9.e443a8",
        "type": "subflow:53e2434d.b0246c",
        "z": "5fa9e96c.b0465",
        "name": "",
        "x": 226.5,
        "y": 185,
        "wires": [
            []
        ]
    },
    {
        "id": "aeabbb9b.db72b8",
        "type": "comment",
        "z": "5fa9e96c.b0465",
        "name": "Wire up at least one of the Session functions",
        "info": "Choose \n   GetNodeRedSession for prototyping\n   \nEnterprise use\nChoose \n   GetCloudantSeesion for DB Session\nor\n   GetRedisSession for Memory Cache\n   \nPlease note that you will need to wire up the\ncorresponding Set Session subflow",
        "x": 227.5,
        "y": 249,
        "wires": []
    },
    {
        "id": "3b0fd3cd.7109dc",
        "type": "http in",
        "z": "26006676.6fa4f2",
        "name": "Mobile HTTP in",
        "url": "/mobile",
        "method": "post",
        "swaggerDoc": "",
        "x": 85,
        "y": 111.77775573730469,
        "wires": [
            [
                "25ec8d96.57806a"
            ]
        ]
    },
    {
        "id": "acdab43f.c95528",
        "type": "function",
        "z": "26006676.6fa4f2",
        "name": "Set Params",
        "func": "msg.source = \"Mobile\"\nvar temp_msg = msg.payload.input\nvar workspace_id = msg.payload.workspace_id\nvar fname = msg.payload.fname\nvar lname = msg.payload.lname\nvar nname = msg.payload.nname\nvar cvalue1 = msg.payload.cvalue1\nvar cvalue2 = msg.payload.cvalue2\nvar cvalue3 = msg.payload.cvalue3\n\nvar context = {}\n\nif (typeof msg.session !== \"undefined\") \n   {context = msg.session.convoPayload.context}\n   \nif (temp_msg.substring(0,2) == 'Hi') {\n   //Uncomment if you want the convo to start at begining when app starts\n   //context = {}\n}\n\ncontext.username = msg.user\ncontext.fname = fname\ncontext.lname = lname\ncontext.nname = nname\ncontext.cvalue1 = cvalue1\ncontext.cvalue2 = cvalue2\ncontext.cvalue3 = cvalue3 \n \n\n//node.log(JSON.stringify(msg.payload));\nmsg.payload = temp_msg;\n\nif (msg.payload.lastIndexOf('/') >= 0 ) {\n     var myindex = msg.payload.lastIndexOf('/')\n     node.log(\"index at: \" + myindex)\n     var dateString = msg.payload\n     node.log(\"dateString : \" + dateString)\n     \n     var d = new Date(dateString)\n     node.log(\"d : \" + d)\n     var now = new Date()\n     node.log(\"today: \" + now)\n     var years = now.getFullYear() - d.getFullYear()\n     node.log(\"years: \" + years)\n     \n     d.setFullYear(d.getFullYear() + years)\n     var days = (now.getTime() - d.getTime()) / (3600 * 24 * 1000.00)\n     node.log(\"days: \" + days)\n     var age = years + days /365\n    \n     context.age = Math.round(age *100)/100\n     node.log(\"age: \"+ context.age)\n \n     var d = new Date(dateString)\n     var now = new Date()\n     now.setMonth(\"12\")\n     now.setDate(\"31\")\n     var years = now.getFullYear() - d.getFullYear()\n     d.setFullYear(d.getFullYear() + years)\n     var days = (now.getTime() - d.getTime()) / (3600 * 24 * 1000.00)\n     var ageEOY = years + days /365\n     context.ageEOY = Math.round(ageEOY * 100)/100\n     node.log(\"ageEOY: \"+ context.ageEOY)\n     \n     var d = new Date(dateString)\n     var now = new Date()\n     now.setMonth(\"01\")\n     now.setDate(\"01\")\n     var years = now.getFullYear() - d.getFullYear()\n     d.setFullYear(d.getFullYear() + years)\n     var days = (now.getTime() - d.getTime()) / (3600 * 24 * 1000.00)\n     var ageBOY = years + days /365\n     context.ageBOY = Math.round(ageBOY * 100)/100\n     node.log(\"ageBOY: \"+ context.ageBOY)\n}\n\n\nnode.log(workspace_id);\n\nvar params = {\n     context: context, \n     workspace_id : workspace_id }\n\nmsg.payload = temp_msg\nmsg.params = params\n\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 576,
        "y": 112.77775573730469,
        "wires": [
            [
                "a540e656.7b0ff",
                "b92324a7.117ba8"
            ]
        ]
    },
    {
        "id": "f70aa42a.193fd",
        "type": "watson-conversation-v1",
        "z": "26006676.6fa4f2",
        "name": "",
        "workspaceid": "71fb6c7d-730c-45ea-94e5-e7704b0eb4ca",
        "multiuser": false,
        "context": false,
        "x": 1022.888916015625,
        "y": 112.11109924316406,
        "wires": [
            [
                "eebdeaf1.d08ce"
            ]
        ]
    },
    {
        "id": "6b0391ba.ea3548",
        "type": "function",
        "z": "26006676.6fa4f2",
        "name": "Response Msg",
        "func": "var Watson_msg = msg.payload;\n\nvar Watson_response = JSON.stringify(msg.payload.output.text);\nvar Watson_context = JSON.stringify(msg.payload.context);\nnode.log(Watson_response)\n\nMyresponse = Watson_response.substring(2,Watson_response.length-2);\n\nif (Myresponse.substring(0,Myresponse,2) == \"\\\",\\\"\") {\n     Myresponse = Myresponse.substring(3,Myresponse.length)\n     node.log(\"Found a comma\")\n     node.log(Myresponse)\n}\n    \n// Dennis added because SSML tag was escaping the \" with \\\" and the replace command fixes it!!!!\nMyresponse = Myresponse.replace(/\\\\/g, \"\");\n\nvar response = {\n //   text: Watson_response.substring(2,Watson_response.length-2),\n    text: Myresponse,\n    username: \"Watson\",\n    context: Watson_context\n};\n\n//var Watson_gvar = global.get(\"Watson_mobile_context\"); \nnode.log(JSON.stringify(response))\n\nmsg.payload = response\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 795.333251953125,
        "y": 258,
        "wires": [
            [
                "a1d48129.e5b118",
                "c6ba3a05.7f2db"
            ]
        ]
    },
    {
        "id": "a1d48129.e5b118",
        "type": "http response",
        "z": "26006676.6fa4f2",
        "name": "Http Response",
        "x": 1010.5,
        "y": 258.5555419921875,
        "wires": []
    },
    {
        "id": "a540e656.7b0ff",
        "type": "watson-tone-analyzer-v3",
        "z": "26006676.6fa4f2",
        "name": "Tone",
        "tones": "all",
        "sentences": "true",
        "contentType": "false",
        "x": 731.7222290039062,
        "y": 111.66664123535156,
        "wires": [
            [
                "7766d11a.2076d8"
            ]
        ]
    },
    {
        "id": "7766d11a.2076d8",
        "type": "function",
        "z": "26006676.6fa4f2",
        "name": "add Tone",
        "func": "\nnode.log(\"*********Found Tone ********\" + msg.response.document_tone.tone_categories[0].tones[0].tone_id);\nnode.log(\"*********Found Tone **Score*****\" + msg.response.document_tone.tone_categories[0].tones[0].score.toFixed(3));\n\nmsg.params.context.angerName = msg.response.document_tone.tone_categories[0].tones[0].tone_name;\nmsg.params.context.angerScore = msg.response.document_tone.tone_categories[0].tones[0].score.toFixed(3);\nmsg.params.context.disgustName = msg.response.document_tone.tone_categories[0].tones[1].tone_name;\nmsg.params.context.disgustScore = msg.response.document_tone.tone_categories[0].tones[1].score.toFixed(3);\nmsg.params.context.fearName = msg.response.document_tone.tone_categories[0].tones[2].tone_name;\nmsg.params.context.fearScore = msg.response.document_tone.tone_categories[0].tones[2].score.toFixed(3);\nmsg.params.context.joyName = msg.response.document_tone.tone_categories[0].tones[3].tone_name;\nmsg.params.context.joyScore = msg.response.document_tone.tone_categories[0].tones[3].score.toFixed(3);\nmsg.params.context.sadnessName = msg.response.document_tone.tone_categories[0].tones[4].tone_name;\nmsg.params.context.sadnessScore = msg.response.document_tone.tone_categories[0].tones[4].score.toFixed(3);\n\nmsg.params.context.analyticalName = msg.response.document_tone.tone_categories[1].tones[0].tone_name;\nmsg.params.context.analyticalScore = msg.response.document_tone.tone_categories[1].tones[0].score.toFixed(3);\nmsg.params.context.confidentName = msg.response.document_tone.tone_categories[1].tones[1].tone_name;\nmsg.params.context.confidentScore = msg.response.document_tone.tone_categories[1].tones[1].score.toFixed(3);\nmsg.params.context.tentativeName = msg.response.document_tone.tone_categories[1].tones[2].tone_name;\nmsg.params.context.tentativeScore = msg.response.document_tone.tone_categories[1].tones[2].score.toFixed(3);\n\nmsg.params.context.OpenName = msg.response.document_tone.tone_categories[2].tones[0].tone_name;\nmsg.params.context.OpenScore = msg.response.document_tone.tone_categories[2].tones[0].score.toFixed(3);\nmsg.params.context.conTitle = msg.response.document_tone.tone_categories[2].tones[1].tone_name;\nmsg.params.context.conScore = msg.response.document_tone.tone_categories[2].tones[1].score.toFixed(3);\nmsg.params.context.extName = msg.response.document_tone.tone_categories[2].tones[2].tone_name;\nmsg.params.context.extScore = msg.response.document_tone.tone_categories[2].tones[2].score.toFixed(3);\nmsg.params.context.agreeName = msg.response.document_tone.tone_categories[2].tones[3].tone_name;\nmsg.params.context.agreeScore = msg.response.document_tone.tone_categories[2].tones[3].score.toFixed(3);\nmsg.params.context.emoName = msg.response.document_tone.tone_categories[2].tones[4].tone_name;\nmsg.params.context.emoScore = msg.response.document_tone.tone_categories[2].tones[4].score.toFixed(3);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 866.0555419921875,
        "y": 112.55552673339844,
        "wires": [
            [
                "f70aa42a.193fd"
            ]
        ]
    },
    {
        "id": "b92324a7.117ba8",
        "type": "debug",
        "z": "26006676.6fa4f2",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 712.5,
        "y": 37,
        "wires": []
    },
    {
        "id": "c6ba3a05.7f2db",
        "type": "debug",
        "z": "26006676.6fa4f2",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 998.5,
        "y": 333,
        "wires": []
    },
    {
        "id": "25ec8d96.57806a",
        "type": "function",
        "z": "26006676.6fa4f2",
        "name": "Get User",
        "func": "msg.user = msg.payload.username;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 249.5,
        "y": 112,
        "wires": [
            [
                "22cd8946.a85e2e"
            ]
        ]
    },
    {
        "id": "22cd8946.a85e2e",
        "type": "subflow:5fa9e96c.b0465",
        "z": "26006676.6fa4f2",
        "x": 408.5,
        "y": 112,
        "wires": [
            [
                "acdab43f.c95528"
            ]
        ]
    },
    {
        "id": "eebdeaf1.d08ce",
        "type": "subflow:8c0b0e67.7c9d5",
        "z": "26006676.6fa4f2",
        "x": 603.5,
        "y": 257,
        "wires": [
            [
                "6b0391ba.ea3548"
            ]
        ]
    }
]